{"version":3,"sources":["api/jsonPlaceholder.ts","store/albumsSlice.ts","components/shared/AlbumCard/AlbumCard.tsx","components/pages/AlbumsGallery/AlbumsGallery.tsx","components/shared/Image/Image.tsx","components/pages/Gallery/Gallery.tsx","components/pages/Viewer/Viewer.tsx","app/App.tsx","reportWebVitals.ts","themes.ts","store/viewerSlice.ts","app/rootReducer.ts","app/store.ts","index.tsx"],"names":["axios","Axios","create","baseURL","getAlbums","a","get","albumsRes","albums","getAllPhotos","photos","data","albumRes","albumPhotos","filter","photo","albumId","id","push","res","createSlice","name","initialState","loading","error","reducers","getAlbumsStart","state","getAlbumsSuccess","action","payload","getAlbumsFailure","actions","fetchAlbums","dispatch","AlbumCard","props","StyledAlbumCard","src","cover","alt","Bottom","Title","title","Info","count","toString","Image","styled","img","section","div","h2","AlbumsGallery","useSelector","useDispatch","useEffect","StyledAlbumsGallery","map","StyledLink","to","style","textDecoration","url","length","Link","theme","colors","black","key","StyledImage","onClick","HoverContainer","StyledImg","white","Gallery","useParams","find","album","parseInt","location","useLocation","history","useHistory","StyledGallery","BackButton","AdaptiveGrid","pathname","background","down","button","Viewer","photoId","currentAlbum","useMemo","prevPhoto","currentPhoto","nextPhoto","index","indexOf","StyledViewer","e","Modal","Controls","NavigationButton","stopPropagation","StyledApp","App","exact","path","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","primary","secondary","borders","breakpoints","sm","md","lg","xl","viewer","show","hide","changeCurrentPhoto","rootReducer","combineReducers","albumsReducer","viewerReducer","store","configureStore","reducer","require","default","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bc13fb7.chunk.js","sourcesContent":["import Axios from \"axios\";\nconst axios = Axios.create({ baseURL: \"https://jsonplaceholder.typicode.com\" });\n\nexport interface Album {\n  userId: number;\n  id: number;\n  title: string;\n  photos: Photo[];\n}\n\nexport interface Photo {\n  id: number;\n  url: string;\n  title: string;\n  thumbnailUrl: string;\n  albumId: number;\n}\n\nexport async function getAlbums(): Promise<Album[]> {\n  const albumsRes = await axios.get<\n    { userId: number; id: number; title: string }[]\n  >(\"/albums\");\n  let albums = [];\n  const photos = await getAllPhotos();\n  for (let albumRes of albumsRes.data) {\n    const albumPhotos = photos.filter((photo) => photo.albumId === albumRes.id);\n    albums.push({ ...albumRes, photos: albumPhotos });\n  }\n  return albums;\n}\n\nexport async function getAllPhotos() {\n  const res = await axios.get<Photo[]>(`/photos`);\n  return res.data;\n}\n","import { Album, getAlbums } from \"../api/jsonPlaceholder\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../app/store\";\n\ninterface AlbumsState {\n  albums: Album[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: AlbumsState = {\n  albums: [],\n  loading: false,\n  error: null,\n};\n\nconst albums = createSlice({\n  name: \"albums\",\n  initialState,\n  reducers: {\n    getAlbumsStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    getAlbumsSuccess(state, action: PayloadAction<Album[]>) {\n      state.albums = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getAlbumsFailure(state, action: PayloadAction<string>) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  getAlbumsStart,\n  getAlbumsSuccess,\n  getAlbumsFailure,\n} = albums.actions;\nexport default albums.reducer;\n\nexport const fetchAlbums = (): AppThunk => async (dispatch) => {\n  try {\n    dispatch(getAlbumsStart());\n    const albums = await getAlbums();\n    dispatch(getAlbumsSuccess(albums));\n  } catch (err) {\n    dispatch(getAlbumsFailure(err));\n  }\n};\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nexport interface AlbumCardProps {\n  title: string;\n  cover: url;\n  count: number;\n}\n\nexport const AlbumCard: FC<AlbumCardProps> = (props) => {\n  return (\n    <StyledAlbumCard>\n      <Image src={props.cover} alt=\"\" />\n      <Bottom>\n        <Title>{props.title}</Title>\n        <Info>\n          <span>photos count: {props.count.toString()}</span>\n        </Info>\n      </Bottom>\n    </StyledAlbumCard>\n  );\n};\n\nconst Image = styled.img`\n  width: 100%;\n  height: auto;\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  object-fit: cover;\n`;\n\nconst StyledAlbumCard = styled.section`\n  display: flex;\n  flex-direction: column;\n  max-width: 20em;\n\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  &:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n`;\n\nconst Bottom = styled.div`\n  padding: 0.5em;\n`;\nconst Title = styled.h2`\n  margin: 0.2em auto;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Info = styled.div`\n  padding-top: 1em;\n  text-align: right;\n  \n`;\n","import React, { FC, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { AlbumCard } from \"../../shared/AlbumCard\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../app/rootReducer\";\nimport { fetchAlbums } from \"../../../store/albumsSlice\";\nimport { Link } from \"react-router-dom\";\n\nexport const AlbumsGallery: FC = () => {\n  const { albums, error } = useSelector((state: RootState) => state.albums);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAlbums());\n  }, [dispatch]);\n\n  return (\n    <StyledAlbumsGallery>\n      {!error ? (\n        albums.map(({ id: albumId, title, photos }) => (\n          <StyledLink\n            key={albumId}\n            to={`/albums/${albumId}/photos`}\n            style={{ textDecoration: \"none\" }}\n          >\n            <AlbumCard\n              title={title}\n              cover={photos[0].url}\n              count={photos.length}\n            />\n          </StyledLink>\n        ))\n      ) : (\n        <div>\n          <h1>Error! Something went wrong.</h1>\n        </div>\n      )}\n    </StyledAlbumsGallery>\n  );\n};\n\nconst StyledAlbumsGallery = styled.section`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(20em, 1fr));\n  justify-items: center;\n  grid-row-gap: 0.6em;\n`;\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n        color: ${({theme}) => theme.colors.black};\n    }\n`;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\ninterface ImageProps {\n  title: string;\n  src: url;\n  onClick: (id: string) => void;\n}\n\nexport const Image: FC<ImageProps> = (props, key) => {\n  return (\n    <StyledImage onClick={() => props.onClick(key)}>\n      <HoverContainer>\n        <StyledImg src={props.src} />\n        <Title>{props.title}</Title>\n      </HoverContainer>\n    </StyledImage>\n  );\n};\n\nconst StyledImage = styled.div`\n  cursor: pointer;\n  outline: none;\n  position: relative;\n  &:hover {\n    user-select: text;\n  }\n  height: fit-content;\n`;\n\nconst HoverContainer = styled.div`\n  position: relative;\n  &:after {\n    position: absolute;\n    content: \" \";\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: all 0.5s;\n    background: linear-gradient(\n      0deg,\n      rgba(0, 0, 0, 0.6) 0%,\n      rgba(0, 0, 0, 0) 50%,\n      rgba(0, 0, 0, 0.6) 100%\n    );\n    opacity: 0;\n  }\n  &:hover,\n  &:focus {\n    &:after {\n      opacity: 1;\n    }\n    & > div {\n      color: ${({ theme }) => theme.colors.white};\n    }\n  }\n`;\n\nconst StyledImg = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nconst Title = styled.div`\n  position: absolute;\n  bottom: 0.5em;\n  left: 0.5em;\n  z-index: 2;\n  user-select: none;\n  opacity: inherit;\n  color: transparent;\n  transition: all 0.5s;\n  & > span {\n    text-overflow: ellipsis;\n    width: 80%;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Image } from \"../../shared/Image\";\nimport { down } from \"styled-breakpoints\";\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../app/rootReducer\";\n\nexport const Gallery = () => {\n  const { albumId } = useParams<{ albumId: string }>();\n  const photos = useSelector((state: RootState) => {\n    return state.albums.albums.find((album) => album.id === parseInt(albumId))\n      ?.photos;\n  });\n  const location = useLocation<{ background: Location }>();\n  const history = useHistory();\n\n  return (\n    <StyledGallery>\n      <BackButton\n        onClick={() => {\n          history.push(`/`);\n        }}\n      >\n        Back to Albums\n      </BackButton>\n      <AdaptiveGrid>\n        {photos &&\n          photos.map(({ id, url, title }) => (\n            <Link\n              to={{\n                pathname: `/albums/${albumId}/photos/${id}`,\n                state: { background: location },\n              }}\n              key={id}\n            >\n              <Image title={title} src={url} onClick={() => {}} />\n            </Link>\n          ))}\n      </AdaptiveGrid>\n    </StyledGallery>\n  );\n};\n\nconst StyledGallery = styled.section``;\n\nconst AdaptiveGrid = styled.section`\n  column-count: 5;\n  column-gap: 0.1em;\n  row-gap: 0;\n  ${down(\"lg\")} {\n    column-count: 4;\n  }\n  ${down(\"md\")} {\n    column-count: 3;\n  }\n  ${down(\"sm\")} {\n    column-count: 1;\n  }\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  border-radius: 1em;\n  left: 5%;\n  top: 5%;\n  z-index: 1;\n  border: none;\n  padding: 0.5em;\n  text-transform: uppercase;\n`;\n","import React, { FC, useMemo, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { RootState } from \"../../../app/rootReducer\";\n\nexport const Viewer: FC = () => {\n  const history = useHistory();\n  const { albumId, photoId } = useParams<{\n    albumId: string;\n    photoId: string;\n  }>();\n\n  const currentAlbum = useSelector((state: RootState) =>\n    state.albums.albums.find((album) => album.id === parseInt(albumId, 10)),\n  );\n\n  const { prevPhoto, currentPhoto, nextPhoto } = useMemo(() => {\n    if (!currentAlbum)\n      return {\n        prevPhoto: null,\n        currentPhoto: null,\n        nextPhoto: null,\n      };\n    const photos = currentAlbum.photos;\n    const currentPhoto = photos.find(\n      (photo) => photo.id === parseInt(photoId, 10),\n    );\n\n    const index = photos.indexOf(currentPhoto!);\n    return {\n      prevPhoto: photos[index - 1] ?? null,\n      currentPhoto,\n      nextPhoto: photos[index + 1] ?? null,\n    };\n  }, [currentAlbum, photoId]);\n\n  const handleBackgroundClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    history.push(`/albums/${currentAlbum!.id}/photos/`);\n  };\n\n  return (\n    <StyledViewer onClick={handleBackgroundClick}>\n      {currentAlbum && currentPhoto && (\n        <Modal>\n          <Image src={currentPhoto.url} />\n          <Controls>\n            {prevPhoto ? (\n              <NavigationButton\n                onClick={(e) => {\n                  e.stopPropagation();\n                  history.push(\n                    `/albums/${currentAlbum.id}/photos/${prevPhoto.id}`,\n                  );\n                }}\n              >\n                {\"<\"}\n              </NavigationButton>\n            ) : (\n              <div />\n            )}\n            {nextPhoto && (\n              <NavigationButton\n                onClick={(e) => {\n                  e.stopPropagation();\n                  history.push(\n                    `/albums/${currentAlbum.id}/photos/${nextPhoto.id}`,\n                  );\n                }}\n              >\n                {\">\"}\n              </NavigationButton>\n            )}\n          </Controls>\n        </Modal>\n      )}\n    </StyledViewer>\n  );\n};\n\nconst Modal = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledViewer = styled.div`\n  z-index: 100;\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background: rgba(40, 44, 52, 0.8);\n`;\n\nconst Image = styled.img`\n  max-height: 100%;\n  width: auto;\n`;\n\nconst Controls = styled.div`\n  position: absolute;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst NavigationButton = styled.button`\n  margin: 1em;\n  height: 2em;\n  width: 2em;\n  border-radius: 50%;\n  border: none;\n  background-color: rgba(40, 44, 52, 0.7);\n  color: rgba(134, 141, 151, 0.8);\n  font-weight: 700;\n  font-size: 3rem;\n  transition: background-color 0.2s linear;\n  &:hover {\n    background-color: rgba(40, 44, 52, 0.9);\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { AlbumsGallery } from \"../components/pages/AlbumsGallery/AlbumsGallery\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport { Gallery } from \"../components/pages/Gallery\";\nimport { Viewer } from \"../components/pages/Viewer\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAlbums } from \"../store/albumsSlice\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAlbums());\n  }, [dispatch]);\n  const location = useLocation<{ background: Location }>();\n  let background = location.state && location.state.background;\n  return (\n    <StyledApp>\n      {/*@ts-ignore*/}\n      <Switch location={background || location}>\n        <Route exact path=\"/\">\n          <AlbumsGallery />\n        </Route>\n        <Route path={\"/albums/:albumId/photos\"}>{<Gallery />}</Route>\n      </Switch>\n      <Route path=\"/albums/:albumId/photos/:photoId\" children={<Viewer />} />\n    </StyledApp>\n  );\n}\n\nconst StyledApp = styled.div`\n  height: 100vh;\n`;\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  colors: {\n    primary: \"#303030\",\n    secondary: \"#303030\",\n    borders: \"#303030\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n  breakpoints: {\n    sm: \"576px\",\n    md: \"768px\",\n    lg: \"992px\",\n    xl: \"1200px\",\n  },\n};\n","import { Album, Photo } from \"../api/jsonPlaceholder\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { fetchAlbums } from \"./albumsSlice\";\n\ninterface ViewerState {\n  show: boolean;\n  currentPhoto?: Photo;\n  currentAlbum?: Album;\n}\n\nconst initialState: ViewerState = {\n  show: false,\n};\n\ntype showViewerPayload = { currentPhoto: Photo; currentAlbum: Album };\n\nconst viewer = createSlice({\n  name: \"viewer\",\n  initialState,\n  reducers: {\n    show: (state, action: PayloadAction<showViewerPayload>) => {\n      state = { ...action.payload, show: true };\n    },\n    hide: (state) => {\n      state = { show: false };\n    },\n    changeCurrentPhoto: (state, action: PayloadAction<number>) => {\n      state.currentPhoto = state.currentAlbum?.photos.find(\n        (photo) => photo.id === action.payload,\n      );\n    },\n  },\n});\n\nexport const { show, hide, changeCurrentPhoto } = viewer.actions;\nexport default viewer.reducer;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport albumsReducer from \"../store/albumsSlice\";\nimport viewerReducer from \"../store/viewerSlice\";\n\nconst rootReducer = combineReducers({\n  albums: albumsReducer,\n  viewer: viewerReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\";\nimport rootReducer, { RootState } from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\n// @ts-ignore\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  // @ts-ignore\n  module.hot.accept(\"./rootReducer\", () => {\n    const newRootReducer = require(\"./rootReducer\").default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"normalize.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { theme } from \"./themes\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst render = () => {\n  const App = require(\"./app/App\").default;\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <HashRouter>\n            <App />\n          </HashRouter>\n        </ThemeProvider>\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n  );\n};\n\nrender();\n\n// @ts-ignore\nif (process.env.NODE_ENV === \"development\" && module[\"hot\"]) {\n  // @ts-ignore\n  module.hot.accept(\"./app/App\", render);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}